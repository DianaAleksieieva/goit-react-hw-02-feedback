{"version":3,"sources":["components/App.styled.jsx","components/Statistic/Statistic.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/App.jsx","index.js"],"names":["Container","styled","div","Button","button","Statistic","props","title","good","neutral","bad","total","goodFeedbackPercent","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","onClick","Section","this","feedbackOption","statistic","React","Component","Feedback","state","countTotalFeedback","countPositiveFeedbackPercentage","console","log","toFixed","showStatistic","visible","addFeedback","setState","prevState","positiveFeedbackPercentag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QACaA,EAAYC,IAAOC,IAAV,0CAGTC,EAASF,IAAOG,OAAV,qG,OCWJC,EAZG,SAACC,GACf,IAAQC,EAAyDD,EAAzDC,MAAOC,EAAkDF,EAAlDE,KAAMC,EAA4CH,EAA5CG,QAASC,EAAmCJ,EAAnCI,IAAKC,EAA8BL,EAA9BK,MAAMC,EAAwBN,EAAxBM,oBACzC,OAAO,gCACC,6BAAKL,IACL,uCAAUC,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCDOC,EARK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAMhC,OAAOC,OAAOC,KAAKH,GAASI,KALP,SAACC,GAAD,OACrB,cAAChB,EAAD,CAAqBiB,KAAK,SAASC,QAAS,kBAAMN,EAAgBI,IAAlE,SACGA,GADUA,OCHIG,E,4JAEjB,WAAuD,IAAD,yDAAZC,KAAKjB,MAAvCkB,EAA8C,EAA9CA,eAAgBC,EAA8B,EAA9BA,UAAWlB,EAAmB,EAAnBA,MAC/B,OAAO,gCACH,6BAAKA,IACL,8BAAMiB,IACL,8BAAMC,W,GANkBC,IAAMC,WCKtBC,E,4MAErBC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGLoB,mBAAqB,WAA0C,IAAD,yDAAf,EAAKD,MAA5BrB,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,IAC/BC,EAAQH,EAAOC,EAAUC,EAC3B,OAAOC,G,EAGboB,gCAAkC,WAA4B,IAAD,yDAAf,EAAKF,MAAdrB,EAAwB,EAAxBA,KAEnC,OADAwB,QAAQC,IAAIzB,EAAO,GACfA,EAAO,GACT,EAAKI,qBAAyBJ,EAAQ,EAAKsB,qBAAwB,KAAKI,QAAQ,GAC3E,EAAKtB,qBAEF,EAAKA,qB,EAGjBuB,cAAgB,WAAwC,IAAvCxB,EAAsC,uDAA9B,EAAKmB,qBAC5BE,QAAQC,IAAItB,GACZ,IAAIyB,GAAU,EAEd,OADc,IAAVzB,IAAeyB,GAAU,GACtBA,G,EAGPC,YAAc,SAAClB,GACf,EAAKmB,UAAS,SAAAC,GACZ,OAAO,eAAGpB,EAASoB,EAAUpB,GAAU,O,4CAG3C,WAA8C,IAAD,yDAAbI,KAAKM,MAA5BrB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,IACtB,OAAO,cAACV,EAAD,UAAW,cAAC,EAAD,CAASO,MAAM,wBAC/BiB,eAAgB,cAAC,EAAD,CACdV,QAASS,KAAKM,MACdd,gBAAiBQ,KAAKc,cACxBZ,UAAWF,KAAKY,gBACd,cAAC,EAAD,CACE5B,MAAM,aACNC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACL8B,0BAA2BjB,KAAKQ,kCAChCpB,MAAOY,KAAKO,qBACZlB,oBAAqBW,KAAKX,sBAA0B,2D,GA/CxBc,IAAMC,WCD5Cc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.be7f077d.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\nexport const Container = styled.div`\r\npadding:50px\r\n`;\r\nexport const Button = styled.button`\r\nmargin: 20px;\r\npadding: 10px;\r\npadding-right:20px;\r\npadding-left: 20px;\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistic = (props) => {\r\n    const { title, good, neutral, bad, total,goodFeedbackPercent } = props\r\n    return <div>\r\n            <h2>{title}</h2>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {goodFeedbackPercent}%</p>\r\n        </div>\r\n    }\r\n    \r\nexport default Statistic\r\n\r\nStatistic.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  goodFeedbackPercent: PropTypes.number.isRequired,\r\n};","import React from 'react';\r\nimport {Button} from \"../App.styled\";\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    const createButton = (option) => (\r\n    <Button key={option} type=\"button\" onClick={() => onLeaveFeedback(option)}>\r\n      {option}\r\n    </Button>)    \r\n    \r\n    return Object.keys(options).map(createButton);\r\n    }\r\n    export default FeedbackOptions","import React from 'react';\r\nexport default class Section extends React.Component {\r\n    \r\n    render({feedbackOption, statistic, title}=this.props) {\r\n        return <div>\r\n            <h2>{title}</h2>\r\n            <div>{feedbackOption}</div>\r\n            {<div>{statistic}</div>}\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react';\nimport { Container} from \"./App.styled\";\nimport Statistic from './Statistic/Statistic.jsx'; \nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions.jsx';\nimport Section from './Section/Section.jsx';\n\nexport default class Feedback extends React.Component {\n\nstate = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n}\n  \n  countTotalFeedback = ({ good, neutral, bad } = this.state) => {\n    const total = good + neutral + bad;\n        return total;\n  }\n  \n  countPositiveFeedbackPercentage = ({ good } = this.state) => {\n    console.log(good > 0)\n    if (good > 0) {\n      this.goodFeedbackPercent = (((good) / this.countTotalFeedback()) * 100).toFixed(0);\n    return this.goodFeedbackPercent\n    }\n       return this.goodFeedbackPercent\n    }\n  \n  showStatistic = (total = this.countTotalFeedback()) => {\n    console.log(total)\n    let visible = false\n    if (total !== 0) { visible = true }\n    return visible\n  }\n\n    addFeedback = (option) => {\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 }\n    })     \n     }\n  render({ good, neutral, bad } = this.state ) {\n    return <Container><Section title=\"Please leave feadback\"\n      feedbackOption={<FeedbackOptions\n        options={this.state}\n        onLeaveFeedback={this.addFeedback} />}\n      statistic={this.showStatistic() ?\n        <Statistic\n          title=\"Statistics\"\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          positiveFeedbackPercentag={this.countPositiveFeedbackPercentage()}\n          total={this.countTotalFeedback()}\n          goodFeedbackPercent={this.goodFeedbackPercent} /> : <h2>No feedback given</h2>}>\n        </Section></Container>\n      \n    }\n}\n\n// title=\"Please leave feadback\"\n// title=\"Statistics\"","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Feedback from './components/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Feedback />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}